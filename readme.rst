üõ°Ô∏è Painel de Controle de Usu√°rios com Autentica√ß√£o
üìù Descri√ß√£o do Projeto
Este projeto implementa um painel de controle completo para gerenciamento de usu√°rios, desenvolvido utilizando o framework CodeIgniter 3 (PHP 7+) e a biblioteca de interface Bootstrap 5. O sistema oferece funcionalidades essenciais de CRUD (Criar, Ler, Atualizar e Excluir) para um cadastro de usu√°rios, al√©m de um sistema de autentica√ß√£o robusto para proteger o acesso administrativo.

‚ú® Funcionalidades Principais
Listagem de Usu√°rios Ativos: Exibe uma tabela responsiva com todos os usu√°rios cadastrados e ativos no sistema.

Cadastro Simplificado de Usu√°rios: Formul√°rio intuitivo para adicionar novos usu√°rios, com valida√ß√£o abrangente de campos obrigat√≥rios, formato de email e garantia de unicidade para CPF e endere√ßo de email.

Edi√ß√£o Detalhada de Usu√°rios: Permite a modifica√ß√£o dos dados de usu√°rios existentes atrav√©s de um formul√°rio pr√©-populado, mantendo as mesmas regras de valida√ß√£o do cadastro.

Exclus√£o L√≥gica Inteligente: Implementa a exclus√£o l√≥gica de usu√°rios, preservando a integridade dos dados ao inv√©s da remo√ß√£o f√≠sica. Os registros s√£o marcados como exclu√≠dos atrav√©s da coluna deleted_at.

Sistema de Autentica√ß√£o Seguro: Protege o acesso ao painel administrativo por meio de um sistema de login baseado em email e senha, com armazenamento seguro de senhas utilizando criptografia.

Funcionalidade de Logout: Permite que o administrador encerre a sess√£o de forma segura.

Valida√ß√£o de Formul√°rios Integrada: Utiliza√ß√£o da poderosa biblioteca de valida√ß√£o do CodeIgniter para assegurar a consist√™ncia e a integridade dos dados submetidos.

M√°scaras de Input para Usabilidade: Aplica√ß√£o de m√°scaras nos campos de CPF e celular, proporcionando uma experi√™ncia de entrada de dados mais fluida e prevenindo erros comuns.

‚öôÔ∏è Pr√©-requisitos
PHP: Vers√£o 7.0 ou superior.

Composer: Gerenciador de depend√™ncias do PHP (geralmente instalado por padr√£o).

Servidor Web: Apache ou Nginx (configurado para processar arquivos PHP).

Banco de Dados: MySQL (ou outro banco de dados compat√≠vel com CodeIgniter).

CodeIgniter 3: O framework PHP utilizado na constru√ß√£o do projeto.

üöÄ Instala√ß√£o e Configura√ß√£o
Obtenha o C√≥digo Fonte:
Clone este reposit√≥rio para o seu ambiente de desenvolvimento local:
```bash
git clone URL_DO_SEU_REPOSITORIO.git
```

Configure o Banco de Dados:

Crie um novo banco de dados no seu servidor MySQL (ou similar) com o nome de sua prefer√™ncia (ex: painel_controle_db).

Importe o conte√∫do do arquivo database.sql, localizado na raiz do projeto, para dentro do banco de dados rec√©m-criado. Este script cont√©m a estrutura das tabelas usuarios e admins.

Ajustes de Configura√ß√£o do CodeIgniter:

Navegue at√© o diret√≥rio application/config/ dentro da pasta do seu projeto.

config.php: Edite este arquivo para definir a base_url com o endere√ßo URL do seu projeto no ambiente local (ex: http://localhost/painel-controle/).

database.php: Configure as credenciais de conex√£o com o seu banco de dados:

hostname: localhost (valor padr√£o)

username: SEU_USUARIO_DO_BANCO

password: SUA_SENHA_DO_BANCO

database: NOME_DO_BANCO_DE_DADOS

dbdriver: mysqli (para MySQL)

Execute a Aplica√ß√£o:

Garanta que o seu servidor web (Apache ou Nginx) esteja em execu√ß√£o e configurado para apontar para a pasta raiz do seu projeto.

Acesse o painel de controle atrav√©s do seu navegador utilizando a base_url configurada no passo anterior.

üîë Acesso ao Painel Administrativo
Para acessar a √°rea de login do painel de controle, direcione seu navegador para o URL da sua aplica√ß√£o (ex: http://localhost/painel-controle/).

Utilize as seguintes credenciais padr√£o para o administrador:

Email: admin@painel.com

Senha: admin123
(A senha √© armazenada de forma segura e criptografada no banco de dados.)

üìÇ Estrutura de Pastas do Projeto
application/controllers/: Cont√©m os controladores (Auth.php, Usuarios.php) que orquestram a l√≥gica da aplica√ß√£o e a intera√ß√£o com o Model e as Views.

application/models/: Armazena os models (Usuario_model.php) respons√°veis pela comunica√ß√£o e manipula√ß√£o dos dados no banco de dados.

application/views/: Organiza os arquivos de visualiza√ß√£o (HTML) da aplica√ß√£o, separados em diret√≥rios como auth (para autentica√ß√£o), usuarios (para gerenciamento de usu√°rios) e templates (para layouts reutiliz√°veis).

application/config/: Cont√©m os arquivos de configura√ß√£o do framework CodeIgniter.

database.sql: Script SQL para a cria√ß√£o das tabelas usuarios e admins no banco de dados.

README.md: Este arquivo, fornecendo informa√ß√µes essenciais sobre o projeto.

.htaccess: Arquivo de configura√ß√£o para o servidor Apache (pode ser utilizado para remover a necessidade de index.php nas URLs).

üìå Observa√ß√µes Importantes
Este projeto foi desenvolvido com fins educacionais e demonstra a implementa√ß√£o de um conjunto b√°sico de funcionalidades CRUD com autentica√ß√£o, utilizando o framework CodeIgniter 3 e o framework de interface Bootstrap 5.

Em um ambiente de produ√ß√£o real, √© crucial implementar medidas de seguran√ßa adicionais para proteger a aplica√ß√£o contra vulnerabilidades.
